name: Build and deploy ASP.Net Core app to an Azure Web App

env:
  DOTNET_VERSION: '6.x'

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'soccer/MatchResultDb/**'
      - '.github/workflows/RDS_Publish.yml'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-deploy:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build with dotnet
        run: dotnet build --configuration Release .\soccer\Soccer.Web

      - name: dotnet publish
        run: dotnet publish -c Release -o publish .\soccer\Soccer.Web
        
      - name: Copy to EC2
        env:
          REMOTE_IP: ${{ secrets.EC2_HOST }}
          USERNAME: ${{ secrets.EC2_USER }}
          PASSWORD: ${{ secrets.EC2_SSH_KEY }}
        run: |
          $remoteIP = $env:REMOTE_IP
          $username = $env:USERNAME
          $password = ConvertTo-SecureString $env:PASSWORD -AsPlainText -Force
          $credentials = New-Object System.Management.Automation.PSCredential ($username, $password)
  
          $sourceFilePath = ".\publish"
          $destinationPath = "\\$remoteIP\C$\inetpub\wwwroot"
          
          New-PSDrive -Name RemoteDrive -PSProvider FileSystem -Root $destinationPath -Credential $credentials 
          Copy-Item -Path $sourceFilePath -Destination "RemoteDrive:" -Recurse -Force            
          Remove-PSDrive -Name RemoteDrive    
